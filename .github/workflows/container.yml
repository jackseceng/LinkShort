---
name: Container

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  REPOSITORY: jackseceng
  IMAGE_NAME: linkshort

jobs:
  build:
    name: Build and Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write # Required for provenance
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Login to Docker Hub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Build and Push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          push: true
          tags: |
            ${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.event_name == 'pull_request' && github.event.number || 'latest' }}
          provenance: true
          sbom: true

  scan:
    needs: build
    name: ${{ matrix.scanner.name }} Scan
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        scanner:
          - name: Grype
            id: grype
          - name: Trivy
            id: trivy
          - name: Scout
            id: scout

    permissions:
      contents: read
      security-events: write
      pull-requests: write # Required for Docker Scout to write comments

    steps:
      - name: 'Get image tag'
        id: get_tag
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "tag=${{ github.event.number }}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          fi

      - name: Login to Docker Hub
        if: matrix.scanner.id == 'scout'
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run Grype Scan
        if: matrix.scanner.id == 'grype'
        uses: anchore/scan-action@a5605eb0943e46279cb4fbd9d44297355d3520ab # v7.0.2
        with:
          image: ${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ steps.get_tag.outputs.tag }}
          fail-build: ${{ github.event_name == 'pull_request' }}
          severity-cutoff: medium
          only-fixed: true
          output-format: sarif, table
          output-file: 'results.sarif'

      - name: Run Trivy Scan
        if: matrix.scanner.id == 'trivy'
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          image-ref: '${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ steps.get_tag.outputs.tag }}'
          scan-type: 'image'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH,MEDIUM'
          format: 'sarif'
          output: 'results.sarif'

      - name: Run Docker Scout Scan
        if: matrix.scanner.id == 'scout'
        uses: docker/scout-action@f8c776824083494ab0d56b8105ba2ca85c86e4de # v1.18.2
        with:
          command: cves
          image: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ steps.get_tag.outputs.tag }}
          only-severities: critical,high,medium
          only-fixed: true
          sarif-file: 'results.sarif'
          write-comment: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload SARIF results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@f443b600d91635bebf5b0d9ebc620189c0d6fba5 # v4.30.8
        with:
          sarif_file: 'results.sarif'